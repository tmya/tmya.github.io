<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Akkie's memos - MIRACLE LINUX</title><link href="https://tmya.github.io/" rel="alternate"></link><link href="https://tmya.github.io/feeds/miracle-linux.atom.xml" rel="self"></link><id>https://tmya.github.io/</id><updated>2021-11-15T00:00:00+09:00</updated><entry><title>ConoHaにMIRACLE LINUX 8.4(CUI)を導入</title><link href="https://tmya.github.io/miracle-linux-tips-deploy-on-conoha.html" rel="alternate"></link><published>2021-11-15T00:00:00+09:00</published><updated>2021-11-15T00:00:00+09:00</updated><author><name>Akio Tomita</name></author><id>tag:tmya.github.io,2021-11-15:/miracle-linux-tips-deploy-on-conoha.html</id><summary type="html">&lt;p&gt;今回はConoHaのVPSにて、MIRACLE LINUX(以下、ML)を使おうと思います。MLにはCentOSからの移行ツールが存在しており、CentOS Linux 8.0から8.4ま …&lt;/p&gt;</summary><content type="html">&lt;p&gt;今回はConoHaのVPSにて、MIRACLE LINUX(以下、ML)を使おうと思います。MLにはCentOSからの移行ツールが存在しており、CentOS Linux 8.0から8.4までであれば対応しているようです。今回はConoHaのVPSにCentOS 8.3をインストールして移行ツールを使ってMIRACLE LINUXを導入します。GUIは使わないのでCUIのみとなります。&lt;/p&gt;
&lt;h3&gt;ConoHaで新しいサーバの追加&lt;/h3&gt;
&lt;p&gt;まずはConoHaにログインをして新しいサーバの追加を行います。VPS割引きっぷは前払いで少し割引になるようですが試していません。イメージタイプはOSタブのCentOSを選びますが、デフォルトは&lt;code&gt;Steam8(64bit)&lt;/code&gt;になっているので、ドロップダウンから&lt;code&gt;8.3(64bit)&lt;/code&gt;を選びます。&lt;/p&gt;
&lt;p&gt;&lt;img alt="サーバ追加の画面" src="https://tmya.github.io/images/conoha-add-server-1.jpg"&gt;&lt;/p&gt;
&lt;p&gt;rootパスワードは大文字や小文字、数字と記号を混ぜないといけないので思いつかない場合は何らかのソフトで生成しましょう。&lt;a href="https://1password.com/jp/password-generator/"&gt;1passwordのジェネレータ&lt;/a&gt;でサクっと生成する方法もあります。お手持ちのマシンに&lt;code&gt;pwgen&lt;/code&gt;コマンドや&lt;code&gt;mkpasswd&lt;/code&gt;コマンドなどがあればそれで生成してもいいでしょう。&lt;/p&gt;
&lt;p&gt;セキュリティ上の懸念があるため&lt;code&gt;オプションを見る&lt;/code&gt;をクリックして、&lt;code&gt;接続許可ポート IPv4&lt;/code&gt;と&lt;code&gt;接続許可ポート IPv6&lt;/code&gt;は両方とも&lt;code&gt;全て拒否&lt;/code&gt;にしましょう。これはサーバの設定を全て終わらせてある程度セキュリティを担保してから許可に変更すると良いでしょう。&lt;/p&gt;
&lt;p&gt;&lt;img alt="オプションを見るの中身" src="https://tmya.github.io/images/conoha-option-disable-inbound-port.jpg"&gt;&lt;/p&gt;
&lt;p&gt;サーバを追加すると1分程度構築中と表示され、その後起動中になります。&lt;/p&gt;
&lt;p&gt;&lt;img alt="サーバの追加完了" src="https://tmya.github.io/images/conoha-add-server-2.jpg"&gt;&lt;/p&gt;
&lt;h3&gt;サーバへのログイン&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ネームタグ&lt;/code&gt;から先ほど作成したサーバをクリックし、&lt;code&gt;コンソール&lt;/code&gt;をクリックすると新しいウィンドウでコンソール画面が表示されます。&lt;/p&gt;
&lt;p&gt;&lt;img alt="コンソール" src="https://tmya.github.io/images/conoha-console.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;root&lt;/code&gt;と打ってEnterキーでログインします。パスワードを聞かれるので先ほどサーバ追加の時に指定したパスワードを入力します。パスワードはキーボードから入力しても画面上に文字が出ません。覗き見防止でそうなっています。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;xxx-xxx-xxx-xxx login: root
Password:
&lt;span class="o"&gt;[&lt;/span&gt;root@xxx-xxx-xxx-xxx ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;この時点ではCentOS 8.3がインストールされていることが確認できます。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# cat /etc/redhat-release&lt;/span&gt;
CentOS Linux release &lt;span class="m"&gt;8&lt;/span&gt;.3.2011
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;MIRACLE LINUXへの移行ツールのダウンロードと実行&lt;/h3&gt;
&lt;p&gt;移行ツールをダウンロードします。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# wget https://repo.dist.miraclelinux.net/miraclelinux/migration-tool/migrate2ml.sh&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;移行ツールを実行するために、実行権限を付与します。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# chmod +x ./migrate2ml.sh&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;通常の切り替えモードで移行ツールを実行します。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# ./migrate2ml.sh --core&lt;/span&gt;

~~~~略~~~~

Core package migration is completed!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;確認してみましょう。&lt;code&gt;redhat-release&lt;/code&gt;ファイルはMIRACLE LINUXになっています。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# cat /etc/redhat-release&lt;/span&gt;
MIRACLE LINUX release &lt;span class="m"&gt;8&lt;/span&gt;.4 &lt;span class="o"&gt;(&lt;/span&gt;Peony&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;パッケージのアップデートと再起動&lt;/h3&gt;
&lt;p&gt;パッケージをアップデートします。数分かかるので待ちましょう。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# dnf -y update&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;終わったら念のため再起動しましょう。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# reboot&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ブートローダの一番上にMIRACLE LINUXが追加されているので、数秒待つと起動します。ログイン画面が表示されたらログインしましょう。&lt;/p&gt;
&lt;p&gt;&lt;img alt="ブートローダ" src="https://tmya.github.io/images/conoha-ml-boot.jpg"&gt;&lt;/p&gt;
&lt;p&gt;ログイン画面では次のようにMIRACLE LINUX 8.4と表示されます。以上で移行は完了です。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;MIRACLE LINUX &lt;span class="m"&gt;8&lt;/span&gt;.4 &lt;span class="o"&gt;(&lt;/span&gt;Peony&lt;span class="o"&gt;)&lt;/span&gt;
Kernel &lt;span class="m"&gt;4&lt;/span&gt;.18.0-305.25.1.el8_4.x86_64 on an X86_64

xxx-xxx-xxx-xxx login:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;[おまけ] 新規ユーザの追加&lt;/h3&gt;
&lt;p&gt;今までの作業は&lt;code&gt;root&lt;/code&gt;という名前のユーザで作業してきました。これはスーパーユーザとも言い、システム等を自由に変更できる"すごいユーザ"であるので、コマンドを打ち間違えてシステムを破壊してしまうかもしれません。一般的に作業を行う一般ユーザを作成しましょう。ユーザを作成するには&lt;code&gt;adduser&lt;/code&gt;コマンドを使います。&lt;code&gt;XXXX&lt;/code&gt;には自分のユーザ名を入力してください。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# adduser XXXX&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;特に何の出力もありませんが、ユーザの作成はできているはずです。下記のコマンドで自分の作成したユーザの行が出力されていれば大丈夫です。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# grep XXXX /etc/passwd&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;一般ユーザと言っても、時々システムの管理を行いたい事があると思います。その時の為に管理者としてコマンドを実行できるように&lt;code&gt;wheel&lt;/code&gt;グループに作成したユーザを追加しましょう。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# usermod -aG wheel XXXX&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;こちらも下記のコマンドで、wheelで始まる行が出力されていれば追加されていると確認できます。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# grep XXXX /etc/group&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;そして作成したユーザにはまだパスワードが設定されていません。パスワードを設定しましょう。設定したいパスワードを2回入力します。1回でないのは、もし打ち間違えているとログインできなくなってしまうので確認の為にこうなっています。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# passwd XXXX&lt;/span&gt;
Changing password &lt;span class="k"&gt;for&lt;/span&gt; user XXXX.
New password:
Retype new password:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; &lt;code&gt;passwd&lt;/code&gt;の後にユーザ名を付けずに実行してしまうと、今ログインしてるユーザのパスワードを変更してしまいます。このタイミングではrootユーザのパスワードを変更してしまうので気を付けてください。1行目の&lt;code&gt;Changing password for user XXXX.&lt;/code&gt;の最後に自分のユーザ名が表示されているか確認しましょう。&lt;/p&gt;
&lt;p&gt;2回とも同じパスワードを入力できているとパスワードが設定されます。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;passwd: all authentication tokens updated successfully.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;一旦ログアウトして、作成したユーザでログインしてみましょう。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# exit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;先ほど作成したユーザ名を入力してEnterキーを押しパスワードを入力してEnterキーを押します。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;MIRACLE LINUX &lt;span class="m"&gt;8&lt;/span&gt;.4 &lt;span class="o"&gt;(&lt;/span&gt;Peony&lt;span class="o"&gt;)&lt;/span&gt;
Kernel &lt;span class="m"&gt;4&lt;/span&gt;.18.0-305.25.1.el8_4.x86_64 on an x86_64

xxx-xxx-xxx-xxx login: XXXX
Password:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ログインできるとコンソールの表示が先ほどまでのrootとちょっと違う形で表示されます。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;XXXX@xxx-xxx-xxx-xxx ~&lt;span class="o"&gt;]&lt;/span&gt;$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;[&lt;code&gt;ユーザ名&lt;/code&gt;@&lt;code&gt;ホスト名&lt;/code&gt; ~]$となります。最後の$は一般ユーザであることを表しています。実は先ほどまでのrootユーザは$ではなく#でした。&lt;/p&gt;
&lt;p&gt;試しにrootユーザでない場合にどうなるか試すにはrootのホームディレクトリを覗こうとしてみるとわかります。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ ls /root
ls: cannot open directory &lt;span class="s1"&gt;&amp;#39;/root&amp;#39;&lt;/span&gt;: Permission denied
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Permission deniedと表示され、権限がないと言われます。&lt;/p&gt;
&lt;p&gt;一時的にスーパーユーザとして実行するにはコマンドの先頭に&lt;code&gt;sudo&lt;/code&gt;をくっつけます。試してみましょう。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sudo ls /root

We trust you have received the usual lecture from the &lt;span class="nb"&gt;local&lt;/span&gt; System
Administrator. It usually boils down to these three things:

    &lt;span class="c1"&gt;#1) Respect the privacy of others.&lt;/span&gt;
    &lt;span class="c1"&gt;#2) Think before you type.&lt;/span&gt;
    &lt;span class="c1"&gt;#3) With great power comes great responsibility.&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;sudo&lt;span class="o"&gt;]&lt;/span&gt; password &lt;span class="k"&gt;for&lt;/span&gt; XXXX:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;初回はだらだらと警告メッセージが表示されます。気を付けて使いましょうという事が書いてあるので、気になる方は翻訳ソフトで調べてください。&lt;/p&gt;
&lt;p&gt;ここでパスワードが要求されますが、&lt;code&gt;password for XXXX&lt;/code&gt;となっている通りrootのパスワードではなく作成した一般ユーザのパスワードを入力してください。正しいパスワードが入力されていれば&lt;code&gt;ls&lt;/code&gt;コマンドが実行されると思います。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;migrate2ml.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これは、最初に移行ツールをダウンロードしたのでそのファイルが表示されています。ダウンロードした時はrootユーザのホームディレクトリで作業していたのでここで表示されます。&lt;/p&gt;
&lt;p&gt;今後は一般ユーザでログインし、必要があれば&lt;code&gt;sudo&lt;/code&gt;を使って作業を行います。&lt;/p&gt;
&lt;h4&gt;その他 いくつか&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;os-release&lt;/code&gt;がML仕様になっています。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ cat /etc/os-release
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;リポジトリがMLに切り替わっており、epelはConoHaのCentOS 8.3でもともと有効のようです。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ dnf repolist --enabled
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="MIRACLE LINUX"></category></entry><entry><title>nkfのインストール - MIRACLE LINUX 8.4</title><link href="https://tmya.github.io/how-to-install-nkf.html" rel="alternate"></link><published>2021-11-09T00:00:00+09:00</published><updated>2021-11-13T00:00:00+09:00</updated><author><name>Akio Tomita</name></author><id>tag:tmya.github.io,2021-11-09:/how-to-install-nkf.html</id><summary type="html">&lt;p&gt;Network Kanji Filterをインストールしよう。&lt;/p&gt;
&lt;h3&gt;nkfパッケージはどこ&lt;/h3&gt;
&lt;p&gt;とりあえず&lt;code&gt;dnf&lt;/code&gt;でインストールしようとすると見つかりません。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sudo …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Network Kanji Filterをインストールしよう。&lt;/p&gt;
&lt;h3&gt;nkfパッケージはどこ&lt;/h3&gt;
&lt;p&gt;とりあえず&lt;code&gt;dnf&lt;/code&gt;でインストールしようとすると見つかりません。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sudo dnf install nkf
一致した引数がありません: nkf
エラー: 一致するものが見つかりません: nkf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;MLでは&lt;a href="https://repo.dist.miraclelinux.net/miraclelinux/8-latest/PowerTools/x86_64/os/Packages-BASE/"&gt;PowerTools リポジトリと思われるURL&lt;/a&gt;に存在するが、まだ準備中(2021/11/9現在)のようで&lt;code&gt;repomd.xml&lt;/code&gt;が存在しません。つまりリポジトリの追加ができません。11月上旬には公開予定&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;とのこと。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2021/11/13 更新:&lt;/strong&gt; いつのまにか公式サイトが11月上旬から11月末という表記に変わっていてTwitterにも告知が出ていました。&lt;a href="https://twitter.com/miraclelinux/status/1459038248148209664"&gt;Twitter - みらくるちゃん &amp;amp; カーネルくん 2021/11/12 15:00&lt;/a&gt; もう少し待つしかない模様。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; CentOS Stream release 8であれば&lt;code&gt;CentOS-Stream-PowerTools.repo&lt;/code&gt;が存在していて&lt;code&gt;dnf config-manager&lt;/code&gt;ほにゃららで有効にすると簡単にリポジトリの追加とインストールが可能なので、MLもきっとそうなると信じています。&lt;/p&gt;
&lt;p&gt;&lt;img alt="nkfのパッケージ" src="https://tmya.github.io/images/nkf-2.1.4.jpg"&gt;&lt;/p&gt;
&lt;p&gt;リポジトリをミラーリングして&lt;code&gt;createrepo&lt;/code&gt;という手もあるけれどそろそろ公開してくれると期待して今回はやりません。&lt;/p&gt;
&lt;h3&gt;nkfのインストール&lt;/h3&gt;
&lt;p&gt;パッケージだけダウンロードして&lt;code&gt;localinstall&lt;/code&gt;オプションを使ってインストールしてみます。依存関係に問題がでないのでこれだけで導入可能です。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ wget https://repo.dist.miraclelinux.net/miraclelinux/8-latest/PowerTools/x86_64/os/Packages-BASE/nkf-2.1.4-8.el8.x86_64.rpm
$ sudo dnf localinstall ./nkf-2.1.4-8.el8.x86_64.rpm
メタデータの期限切れの最終確認: &lt;span class="m"&gt;3&lt;/span&gt;:06:36 時間前の 2021年11月09日 09時21分29秒 に実施しました。
依存関係が解決しました。
&lt;span class="o"&gt;========================================================================================================================&lt;/span&gt;
 パッケージ            アーキテクチャー         バージョン                         リポジトリー                   &lt;span class="nv"&gt;サイズ&lt;/span&gt;
&lt;span class="o"&gt;========================================================================================================================&lt;/span&gt;
インストール:
 nkf                   x86_64                   &lt;span class="m"&gt;1&lt;/span&gt;:2.1.4-8.el8                      @commandline                   &lt;span class="m"&gt;143&lt;/span&gt; k

&lt;span class="nv"&gt;トランザクションの概要&lt;/span&gt;
&lt;span class="o"&gt;========================================================================================================================&lt;/span&gt;
インストール  &lt;span class="m"&gt;1&lt;/span&gt; パッケージ

合計サイズ: &lt;span class="m"&gt;143&lt;/span&gt; k
インストール後のサイズ: &lt;span class="m"&gt;309&lt;/span&gt; k
これでよろしいですか? &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;y&lt;/code&gt;を押して&lt;code&gt;Enter&lt;/code&gt;でインストールできます。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;これでよろしいですか? &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;: y
パッケージのダウンロード:
トランザクションの確認を実行中
トランザクションの確認に成功しました。
トランザクションのテストを実行中
トランザクションのテストに成功しました。
トランザクションを実行中
  準備             :                                                                                                &lt;span class="m"&gt;1&lt;/span&gt;/1
  インストール中   : nkf-1:2.1.4-8.el8.x86_64                                                                       &lt;span class="m"&gt;1&lt;/span&gt;/1
  scriptletの実行中: nkf-1:2.1.4-8.el8.x86_64                                                                       &lt;span class="m"&gt;1&lt;/span&gt;/1
  検証             : nkf-1:2.1.4-8.el8.x86_64                                                                       &lt;span class="m"&gt;1&lt;/span&gt;/1

インストール済み:
  nkf-1:2.1.4-8.el8.x86_64

完了しました!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ nkf -v
Network Kanji Filter Version &lt;span class="m"&gt;2&lt;/span&gt;.1.4 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2015&lt;/span&gt;-12-12&lt;span class="o"&gt;)&lt;/span&gt;
Copyright &lt;span class="o"&gt;(&lt;/span&gt;C&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;1987&lt;/span&gt;, FUJITSU LTD. &lt;span class="o"&gt;(&lt;/span&gt;I.Ichikawa&lt;span class="o"&gt;)&lt;/span&gt;.
Copyright &lt;span class="o"&gt;(&lt;/span&gt;C&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;1996&lt;/span&gt;-2015, The nkf Project.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;問題なくインストールできてます。が、バージョンを見ると現行の一つ前のバージョンですね。バグを踏まなければ使えるでしょう。&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;&lt;a href="https://www.cybertrust.co.jp/miraclelinux-license-free/"&gt;MIRACLE LINUX ライセンスフリー ｜サイバートラスト&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="MIRACLE LINUX"></category></entry><entry><title>MIRACLE LINUX 8.4 メモ</title><link href="https://tmya.github.io/miracle-linux-tips.html" rel="alternate"></link><published>2021-10-25T00:00:00+09:00</published><updated>2021-10-25T00:00:00+09:00</updated><author><name>Akio Tomita</name></author><id>tag:tmya.github.io,2021-10-25:/miracle-linux-tips.html</id><summary type="html">&lt;p&gt;CentOS 8が先行き不透明な今、懐かしのMIRACLE LINUXがライセンスフリー&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;となって公開された。
とりあえず無償提供の物を使っ …&lt;/p&gt;</summary><content type="html">&lt;p&gt;CentOS 8が先行き不透明な今、懐かしのMIRACLE LINUXがライセンスフリー&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;となって公開された。
とりあえず無償提供の物を使っても2030年5月まではアップデートが提供されるらしいので期待できる。
CentOSの代替としてMIRACLE LINUX(以下 ML)を使ってみるのでその際の気付いたことをメモしていく予定。
日本発ディストリなので、ML関係の記事は日本語で書くよ。&lt;/p&gt;
&lt;h2&gt;気をつけるポイント&lt;/h2&gt;
&lt;h3&gt;パーティション構成&lt;/h3&gt;
&lt;p&gt;自動構成だと&lt;code&gt;/&lt;/code&gt;と&lt;code&gt;/home&lt;/code&gt;でパーティションが分かれている。場合によってはまとめてもいいかもしれない。&lt;/p&gt;
&lt;h3&gt;インストール後&lt;/h3&gt;
&lt;p&gt;日本語入力は&lt;code&gt;半角/英数&lt;/code&gt;や&lt;code&gt;Ctrl + Space&lt;/code&gt;を押してもすぐには出来無い。画面右上のタスクバーから日本語入力に切り替えると、キーボードでの切り替えが可能になる。（公式にも書いてある）&lt;/p&gt;
&lt;h2&gt;やってみたこと一覧&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;pyenv, pipenvの導入&lt;/li&gt;
&lt;li&gt;GnuPGの導入&lt;/li&gt;
&lt;li&gt;Google Chromeの導入&lt;/li&gt;
&lt;li&gt;GNOME Classicへの切り替え&lt;/li&gt;
&lt;li&gt;Cockpitの導入&lt;/li&gt;
&lt;li&gt;VirtualBoxの導入&lt;/li&gt;
&lt;li&gt;MIRACLE LINUX on WSL2&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;VirtualBoxでやったこと&lt;/h3&gt;
&lt;p&gt;元のWindows10マシンにSSDを追加してMLをインストールし、物理SSDにアクセスするvmdkを用意する。あとはVirtualBoxにそのvmdkを追加するとWindows10が起動する。なおライセンスに注意。
&lt;img alt="Windows10 on MIRACLE LINUX" src="https://tmya.github.io/images/ml_win_d.png"&gt;&lt;/p&gt;
&lt;h2&gt;気付いたこと&lt;/h2&gt;
&lt;h3&gt;マスコット画像&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;/usr/share/backgrounds&lt;/code&gt; にみらくるちゃんとカーネルくんの背景画像が存在する。
&lt;img alt="みらくるちゃんとカーネルくん" src="https://tmya.github.io/images/miracle_kernel.jpg"&gt;&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;&lt;a href="https://www.cybertrust.co.jp/miraclelinux-license-free/"&gt;MIRACLE LINUX ライセンスフリー&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="MIRACLE LINUX"></category></entry></feed>